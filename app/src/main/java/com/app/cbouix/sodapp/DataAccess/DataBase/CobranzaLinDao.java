package com.app.cbouix.sodapp.DataAccess.DataBase;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table COBRANZA_LIN.
*/
public class CobranzaLinDao extends AbstractDao<CobranzaLin, Long> {

    public static final String TABLENAME = "COBRANZA_LIN";

    /**
     * Properties of entity CobranzaLin.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property CobranzaId = new Property(1, Long.class, "CobranzaId", false, "COBRANZA_ID");
        public final static Property MedioCzaId = new Property(2, Long.class, "MedioCzaId", false, "MEDIO_CZA_ID");
        public final static Property MedioCzaCod = new Property(3, String.class, "MedioCzaCod", false, "MEDIO_CZA_COD");
        public final static Property MedioCzaNombre = new Property(4, String.class, "MedioCzaNombre", false, "MEDIO_CZA_NOMBRE");
        public final static Property Importe = new Property(5, Double.class, "Importe", false, "IMPORTE");
        public final static Property NroDocumento = new Property(6, String.class, "NroDocumento", false, "NRO_DOCUMENTO");
        public final static Property Vencimiento = new Property(7, String.class, "Vencimiento", false, "VENCIMIENTO");
        public final static Property BancoId = new Property(8, String.class, "BancoId", false, "BANCO_ID");
        public final static Property BancoCod = new Property(9, String.class, "BancoCod", false, "BANCO_COD");
        public final static Property BancoNombre = new Property(10, String.class, "BancoNombre", false, "BANCO_NOMBRE");
        public final static Property TarjCreditoId = new Property(11, String.class, "TarjCreditoId", false, "TARJ_CREDITO_ID");
        public final static Property TarjCreditoCod = new Property(12, String.class, "TarjCreditoCod", false, "TARJ_CREDITO_COD");
        public final static Property TarjCreditoNombre = new Property(13, String.class, "TarjCreditoNombre", false, "TARJ_CREDITO_NOMBRE");
        public final static Property TarjDebitoId = new Property(14, String.class, "TarjDebitoId", false, "TARJ_DEBITO_ID");
        public final static Property TarjDebitoCod = new Property(15, String.class, "TarjDebitoCod", false, "TARJ_DEBITO_COD");
        public final static Property TarjDebitoNombre = new Property(16, String.class, "TarjDebitoNombre", false, "TARJ_DEBITO_NOMBRE");
        public final static Property TarjNumero = new Property(17, String.class, "TarjNumero", false, "TARJ_NUMERO");
        public final static Property TarjOperacion = new Property(18, String.class, "TarjOperacion", false, "TARJ_OPERACION");
        public final static Property TarjCuotas = new Property(19, String.class, "TarjCuotas", false, "TARJ_CUOTAS");
        public final static Property ImporteBruto = new Property(20, Double.class, "ImporteBruto", false, "IMPORTE_BRUTO");
    };


    public CobranzaLinDao(DaoConfig config) {
        super(config);
    }
    
    public CobranzaLinDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'COBRANZA_LIN' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'COBRANZA_ID' INTEGER," + // 1: CobranzaId
                "'MEDIO_CZA_ID' INTEGER," + // 2: MedioCzaId
                "'MEDIO_CZA_COD' TEXT," + // 3: MedioCzaCod
                "'MEDIO_CZA_NOMBRE' TEXT," + // 4: MedioCzaNombre
                "'IMPORTE' REAL," + // 5: Importe
                "'NRO_DOCUMENTO' TEXT," + // 6: NroDocumento
                "'VENCIMIENTO' TEXT," + // 7: Vencimiento
                "'BANCO_ID' TEXT," + // 8: BancoId
                "'BANCO_COD' TEXT," + // 9: BancoCod
                "'BANCO_NOMBRE' TEXT," + // 10: BancoNombre
                "'TARJ_CREDITO_ID' TEXT," + // 11: TarjCreditoId
                "'TARJ_CREDITO_COD' TEXT," + // 12: TarjCreditoCod
                "'TARJ_CREDITO_NOMBRE' TEXT," + // 13: TarjCreditoNombre
                "'TARJ_DEBITO_ID' TEXT," + // 14: TarjDebitoId
                "'TARJ_DEBITO_COD' TEXT," + // 15: TarjDebitoCod
                "'TARJ_DEBITO_NOMBRE' TEXT," + // 16: TarjDebitoNombre
                "'TARJ_NUMERO' TEXT," + // 17: TarjNumero
                "'TARJ_OPERACION' TEXT," + // 18: TarjOperacion
                "'TARJ_CUOTAS' TEXT," + // 19: TarjCuotas
                "'IMPORTE_BRUTO' REAL);"); // 20: ImporteBruto
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'COBRANZA_LIN'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, CobranzaLin entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long CobranzaId = entity.getCobranzaId();
        if (CobranzaId != null) {
            stmt.bindLong(2, CobranzaId);
        }
 
        Long MedioCzaId = entity.getMedioCzaId();
        if (MedioCzaId != null) {
            stmt.bindLong(3, MedioCzaId);
        }
 
        String MedioCzaCod = entity.getMedioCzaCod();
        if (MedioCzaCod != null) {
            stmt.bindString(4, MedioCzaCod);
        }
 
        String MedioCzaNombre = entity.getMedioCzaNombre();
        if (MedioCzaNombre != null) {
            stmt.bindString(5, MedioCzaNombre);
        }
 
        Double Importe = entity.getImporte();
        if (Importe != null) {
            stmt.bindDouble(6, Importe);
        }
 
        String NroDocumento = entity.getNroDocumento();
        if (NroDocumento != null) {
            stmt.bindString(7, NroDocumento);
        }
 
        String Vencimiento = entity.getVencimiento();
        if (Vencimiento != null) {
            stmt.bindString(8, Vencimiento);
        }
 
        String BancoId = entity.getBancoId();
        if (BancoId != null) {
            stmt.bindString(9, BancoId);
        }
 
        String BancoCod = entity.getBancoCod();
        if (BancoCod != null) {
            stmt.bindString(10, BancoCod);
        }
 
        String BancoNombre = entity.getBancoNombre();
        if (BancoNombre != null) {
            stmt.bindString(11, BancoNombre);
        }
 
        String TarjCreditoId = entity.getTarjCreditoId();
        if (TarjCreditoId != null) {
            stmt.bindString(12, TarjCreditoId);
        }
 
        String TarjCreditoCod = entity.getTarjCreditoCod();
        if (TarjCreditoCod != null) {
            stmt.bindString(13, TarjCreditoCod);
        }
 
        String TarjCreditoNombre = entity.getTarjCreditoNombre();
        if (TarjCreditoNombre != null) {
            stmt.bindString(14, TarjCreditoNombre);
        }
 
        String TarjDebitoId = entity.getTarjDebitoId();
        if (TarjDebitoId != null) {
            stmt.bindString(15, TarjDebitoId);
        }
 
        String TarjDebitoCod = entity.getTarjDebitoCod();
        if (TarjDebitoCod != null) {
            stmt.bindString(16, TarjDebitoCod);
        }
 
        String TarjDebitoNombre = entity.getTarjDebitoNombre();
        if (TarjDebitoNombre != null) {
            stmt.bindString(17, TarjDebitoNombre);
        }
 
        String TarjNumero = entity.getTarjNumero();
        if (TarjNumero != null) {
            stmt.bindString(18, TarjNumero);
        }
 
        String TarjOperacion = entity.getTarjOperacion();
        if (TarjOperacion != null) {
            stmt.bindString(19, TarjOperacion);
        }
 
        String TarjCuotas = entity.getTarjCuotas();
        if (TarjCuotas != null) {
            stmt.bindString(20, TarjCuotas);
        }
 
        Double ImporteBruto = entity.getImporteBruto();
        if (ImporteBruto != null) {
            stmt.bindDouble(21, ImporteBruto);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public CobranzaLin readEntity(Cursor cursor, int offset) {
        CobranzaLin entity = new CobranzaLin( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // CobranzaId
            cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2), // MedioCzaId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // MedioCzaCod
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // MedioCzaNombre
            cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5), // Importe
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // NroDocumento
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // Vencimiento
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // BancoId
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // BancoCod
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // BancoNombre
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // TarjCreditoId
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // TarjCreditoCod
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // TarjCreditoNombre
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // TarjDebitoId
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // TarjDebitoCod
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // TarjDebitoNombre
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // TarjNumero
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // TarjOperacion
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // TarjCuotas
            cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20) // ImporteBruto
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, CobranzaLin entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCobranzaId(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setMedioCzaId(cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2));
        entity.setMedioCzaCod(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setMedioCzaNombre(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setImporte(cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5));
        entity.setNroDocumento(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setVencimiento(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setBancoId(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setBancoCod(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setBancoNombre(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTarjCreditoId(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setTarjCreditoCod(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setTarjCreditoNombre(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setTarjDebitoId(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setTarjDebitoCod(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setTarjDebitoNombre(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setTarjNumero(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setTarjOperacion(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setTarjCuotas(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setImporteBruto(cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(CobranzaLin entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(CobranzaLin entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
